{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { request } from 'graphql-request';\nexport default {\n  data() {\n    return {\n      tasks: [],\n      newTaskTitle: ''\n    };\n  },\n  methods: {\n    async fetchTasks() {\n      const query = `\n        {\n          tasks {\n            id\n            title\n            completed\n          }\n        }\n      `;\n      try {\n        const data = await request('http://localhost:4000/graphql', query);\n        this.tasks = data.tasks;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async addTask() {\n      if (!this.newTaskTitle.trim()) return;\n      const mutation = `\n        mutation($title: String!) {\n          addTask(title: $title) {\n            id\n            title\n            completed\n          }\n        }\n      `;\n      const variables = {\n        title: this.newTaskTitle.trim()\n      };\n      try {\n        const data = await request('http://localhost:4000/graphql', mutation, variables);\n        this.tasks.push(data.addTask);\n        this.newTaskTitle = '';\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async updateTask(task) {\n      const mutation = `\n        mutation($id: ID!, $completed: Boolean!) {\n          updateTask(id: $id, completed: $completed) {\n            id\n            title\n            completed\n          }\n        }\n      `;\n      const variables = {\n        id: task.id,\n        completed: task.completed\n      };\n      try {\n        await request('http://localhost:4000/graphql', mutation, variables);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async deleteTask(taskId) {\n      const mutation = `\n        mutation($id: ID!) {\n          deleteTask(id: $id)\n        }\n      `;\n      const variables = {\n        id: taskId\n      };\n      try {\n        await request('http://localhost:4000/graphql', mutation, variables);\n        this.tasks = this.tasks.filter(task => task.id !== taskId);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  created() {\n    this.fetchTasks();\n  }\n};","map":{"version":3,"names":["request","data","tasks","newTaskTitle","methods","fetchTasks","query","error","console","addTask","trim","mutation","variables","title","push","updateTask","task","id","completed","deleteTask","taskId","filter","created"],"sources":["C:\\Users\\HP\\Documents\\P1\\front\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Lista de Tareas</h1>\r\n    <div class=\"profile-pic\">\r\n        <img src=\"@/assets/doodle.jpg\" alt=\"imagen\" />\r\n      </div>\r\n    <table class=\"task-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Tarea</th>\r\n          <th>Completada</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"task in tasks\" :key=\"task.id\">\r\n          <td>{{ task.title }}</td>\r\n          <td>\r\n            <input type=\"checkbox\" :id=\"'task-' + task.id\" v-model=\"task.completed\" @change=\"updateTask(task)\" />\r\n           \r\n          </td>\r\n          <td>\r\n            <button class=\"btn-delete\" @click=\"deleteTask(task.id)\">Eliminar</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"add-task\">\r\n      <input v-model=\"newTaskTitle\" placeholder=\"Nueva tarea\" />\r\n      <button class=\"btn-add\" @click=\"addTask\">Agregar Tarea</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { request } from 'graphql-request';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n      newTaskTitle: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchTasks() {\r\n      const query = `\r\n        {\r\n          tasks {\r\n            id\r\n            title\r\n            completed\r\n          }\r\n        }\r\n      `;\r\n\r\n      try {\r\n        const data = await request('http://localhost:4000/graphql', query);\r\n        this.tasks = data.tasks;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async addTask() {\r\n      if (!this.newTaskTitle.trim()) return;\r\n\r\n      const mutation = `\r\n        mutation($title: String!) {\r\n          addTask(title: $title) {\r\n            id\r\n            title\r\n            completed\r\n          }\r\n        }\r\n      `;\r\n\r\n      const variables = { title: this.newTaskTitle.trim() };\r\n\r\n      try {\r\n        const data = await request('http://localhost:4000/graphql', mutation, variables);\r\n        this.tasks.push(data.addTask);\r\n        this.newTaskTitle = '';\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async updateTask(task) {\r\n      const mutation = `\r\n        mutation($id: ID!, $completed: Boolean!) {\r\n          updateTask(id: $id, completed: $completed) {\r\n            id\r\n            title\r\n            completed\r\n          }\r\n        }\r\n      `;\r\n\r\n      const variables = {\r\n        id: task.id,\r\n        completed: task.completed,\r\n      };\r\n\r\n      try {\r\n        await request('http://localhost:4000/graphql', mutation, variables);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async deleteTask(taskId) {\r\n      const mutation = `\r\n        mutation($id: ID!) {\r\n          deleteTask(id: $id)\r\n        }\r\n      `;\r\n\r\n      const variables = {\r\n        id: taskId,\r\n      };\r\n\r\n      try {\r\n        await request('http://localhost:4000/graphql', mutation, variables);\r\n        this.tasks = this.tasks.filter(task => task.id !== taskId);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchTasks();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.task-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.task-table th,\r\n.task-table td {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: left;\r\n}\r\n\r\n.check-label {\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.check-label::after {\r\n  content: \"\";\r\n  display: block;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: #007bff;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.check-label input:checked + .check-label::after {\r\n  opacity: 1;\r\n}\r\n\r\n.btn-delete {\r\n  background-color: #dc3596;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-delete:hover {\r\n  background-color: #f7447f;\r\n}\r\n\r\n.btn-add {\r\n  background-color: #8dcbf0;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-add:hover {\r\n  background-color: #63aef3;\r\n}\r\n\r\n.add-task {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.add-task input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-task button {\r\n  border: none;\r\n}\r\n\r\n.profile-pic {\r\n  position: absolute;\r\n  top: 10px; /* Ajusta la posición vertical según necesites */\r\n  right: 10px; /* Ajusta la posición horizontal según necesites */\r\n  z-index: 1; /* Asegura que esté sobre otros elementos */\r\n}\r\n\r\n.profile-pic img {\r\n  width: 40px;\r\n  height: 40px;\r\n  \r\n}\r\n</style>\r\n"],"mappings":";AAmCA,SAASA,OAAM,QAAS,iBAAiB;AAEzC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAI;;;;;;;;OAQb;MAED,IAAI;QACF,MAAML,IAAG,GAAI,MAAMD,OAAO,CAAC,+BAA+B,EAAEM,KAAK,CAAC;QAClE,IAAI,CAACJ,KAAI,GAAID,IAAI,CAACC,KAAK;MACzB,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAME,OAAOA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACN,YAAY,CAACO,IAAI,CAAC,CAAC,EAAE;MAE/B,MAAMC,QAAO,GAAI;;;;;;;;OAQhB;MAED,MAAMC,SAAQ,GAAI;QAAEC,KAAK,EAAE,IAAI,CAACV,YAAY,CAACO,IAAI,CAAC;MAAE,CAAC;MAErD,IAAI;QACF,MAAMT,IAAG,GAAI,MAAMD,OAAO,CAAC,+BAA+B,EAAEW,QAAQ,EAAEC,SAAS,CAAC;QAChF,IAAI,CAACV,KAAK,CAACY,IAAI,CAACb,IAAI,CAACQ,OAAO,CAAC;QAC7B,IAAI,CAACN,YAAW,GAAI,EAAE;MACxB,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAMQ,UAAUA,CAACC,IAAI,EAAE;MACrB,MAAML,QAAO,GAAI;;;;;;;;OAQhB;MAED,MAAMC,SAAQ,GAAI;QAChBK,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,SAAS,EAAEF,IAAI,CAACE;MAClB,CAAC;MAED,IAAI;QACF,MAAMlB,OAAO,CAAC,+BAA+B,EAAEW,QAAQ,EAAEC,SAAS,CAAC;MACrE,EAAE,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAMY,UAAUA,CAACC,MAAM,EAAE;MACvB,MAAMT,QAAO,GAAI;;;;OAIhB;MAED,MAAMC,SAAQ,GAAI;QAChBK,EAAE,EAAEG;MACN,CAAC;MAED,IAAI;QACF,MAAMpB,OAAO,CAAC,+BAA+B,EAAEW,QAAQ,EAAEC,SAAS,CAAC;QACnE,IAAI,CAACV,KAAI,GAAI,IAAI,CAACA,KAAK,CAACmB,MAAM,CAACL,IAAG,IAAKA,IAAI,CAACC,EAAC,KAAMG,MAAM,CAAC;MAC5D,EAAE,OAAOb,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF,CAAC;EACDe,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjB,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}