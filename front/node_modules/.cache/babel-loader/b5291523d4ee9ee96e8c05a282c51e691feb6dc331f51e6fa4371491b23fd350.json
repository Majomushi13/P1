{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { request } from 'graphql-request';\nexport default {\n  data() {\n    return {\n      tasks: [],\n      newTask: ''\n    };\n  },\n  methods: {\n    async addTask() {\n      const query = `\n          mutation($title: String!) {\n            addTask(title: $title) {\n              id\n              title\n              completed\n            }\n          }\n        `;\n      const variables = {\n        title: this.newTask\n      };\n      try {\n        const data = await request('http://localhost:4000/graphql', query, variables);\n        this.tasks.push(data.addTask);\n        this.newTask = '';\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async fetchTasks() {\n      const query = `\n          {\n            tasks {\n              id\n              title\n              completed\n            }\n          }\n        `;\n      try {\n        const data = await request('http://localhost:4000/graphql', query);\n        this.tasks = data.tasks;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchTasks();\n  }\n};","map":{"version":3,"names":["request","data","tasks","newTask","methods","addTask","query","variables","title","push","error","console","fetchTasks","mounted"],"sources":["C:\\Users\\HP\\Documents\\P1\\front\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Lista de Tareas</h1>\r\n      <ul>\r\n        <li v-for=\"task in tasks\" :key=\"task.id\">\r\n          {{ task.title }} - {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n        </li>\r\n      </ul>\r\n      <input v-model=\"newTask\" placeholder=\"Nueva tarea\" />\r\n      <button @click=\"addTask\">Agregar Tarea</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { request } from 'graphql-request';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        tasks: [],\r\n        newTask: '',\r\n      };\r\n    },\r\n    methods: {\r\n      async addTask() {\r\n        const query = `\r\n          mutation($title: String!) {\r\n            addTask(title: $title) {\r\n              id\r\n              title\r\n              completed\r\n            }\r\n          }\r\n        `;\r\n  \r\n        const variables = { title: this.newTask };\r\n  \r\n        try {\r\n          const data = await request('http://localhost:4000/graphql', query, variables);\r\n          this.tasks.push(data.addTask);\r\n          this.newTask = '';\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n      async fetchTasks() {\r\n        const query = `\r\n          {\r\n            tasks {\r\n              id\r\n              title\r\n              completed\r\n            }\r\n          }\r\n        `;\r\n  \r\n        try {\r\n          const data = await request('http://localhost:4000/graphql', query);\r\n          this.tasks = data.tasks;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchTasks();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n\r\n  "],"mappings":";AAcE,SAASA,OAAM,QAAS,iBAAiB;AAEzC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,MAAMC,KAAI,GAAI;;;;;;;;SAQb;MAED,MAAMC,SAAQ,GAAI;QAAEC,KAAK,EAAE,IAAI,CAACL;MAAQ,CAAC;MAEzC,IAAI;QACF,MAAMF,IAAG,GAAI,MAAMD,OAAO,CAAC,+BAA+B,EAAEM,KAAK,EAAEC,SAAS,CAAC;QAC7E,IAAI,CAACL,KAAK,CAACO,IAAI,CAACR,IAAI,CAACI,OAAO,CAAC;QAC7B,IAAI,CAACF,OAAM,GAAI,EAAE;MACnB,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,MAAMN,KAAI,GAAI;;;;;;;;SAQb;MAED,IAAI;QACF,MAAML,IAAG,GAAI,MAAMD,OAAO,CAAC,+BAA+B,EAAEM,KAAK,CAAC;QAClE,IAAI,CAACJ,KAAI,GAAID,IAAI,CAACC,KAAK;MACzB,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}