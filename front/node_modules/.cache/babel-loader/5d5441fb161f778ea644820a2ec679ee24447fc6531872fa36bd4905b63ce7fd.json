{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Lista de Tareas\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, _toDisplayString(task.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTaskTitle = $event),\n    placeholder: \"Nueva tarea\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newTaskTitle]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addTask && $options.addTask(...args))\n  }, \"Agregar Tarea\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","tasks","task","key","id","title","_cache","$event","newTaskTitle","placeholder","onClick","args","$options","addTask"],"sources":["C:\\Users\\HP\\Documents\\P1\\front\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Lista de Tareas</h1>\r\n      <ul>\r\n        <li v-for=\"task in tasks\" :key=\"task.id\">{{ task.title }}</li>\r\n      </ul>\r\n      <input v-model=\"newTaskTitle\" placeholder=\"Nueva tarea\" />\r\n      <button @click=\"addTask\">Agregar Tarea</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { request } from 'graphql-request';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        tasks: [],\r\n        newTaskTitle: '',\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchTasks() {\r\n        const query = `\r\n          {\r\n            tasks {\r\n              id\r\n              title\r\n              completed\r\n            }\r\n          }\r\n        `;\r\n  \r\n        try {\r\n          const data = await request('http://localhost:4000/graphql', query);\r\n          this.tasks = data.tasks;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n      async addTask() {\r\n        if (!this.newTaskTitle.trim()) return;\r\n  \r\n        const mutation = `\r\n          mutation($title: String!) {\r\n            addTask(title: $title) {\r\n              id\r\n              title\r\n              completed\r\n            }\r\n          }\r\n        `;\r\n  \r\n        const variables = { title: this.newTaskTitle.trim() };\r\n  \r\n        try {\r\n          const data = await request('http://localhost:4000/graphql', mutation, variables);\r\n          this.tasks.push(data.addTask);\r\n          this.newTaskTitle = ''; // Limpiar el campo despu√©s de agregar\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n    },\r\n    created() {\r\n      this.fetchTasks();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Estilos opcionales */\r\n  </style>\r\n  "],"mappings":";gCAEMA,mBAAA,CAAwB,YAApB,iBAAe;;uBADrBC,mBAAA,CAOM,cANJC,UAAwB,EACxBF,mBAAA,CAEK,c,kBADHC,mBAAA,CAA8DE,SAAA,QAJtEC,WAAA,CAI2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAA8D;MAAnCO,GAAG,EAAED,IAAI,CAACE;wBAAOF,IAAI,CAACG,KAAK;oDAExDV,mBAAA,CAA0D;IANhE,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMsBP,KAAA,CAAAQ,YAAY,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAA1BT,KAAA,CAAAQ,YAAY,E,GAC5Bb,mBAAA,CAA+C;IAAtCe,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,eAAa,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}