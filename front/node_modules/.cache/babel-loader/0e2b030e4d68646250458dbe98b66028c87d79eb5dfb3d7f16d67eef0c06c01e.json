{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Lista de Tareas\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"profile-pic\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"logo.png\",\n  alt: \"\"\n})], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"task-table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Tarea\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Completada\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Acciones\")])], -1 /* HOISTED */);\nconst _hoisted_5 = [\"id\", \"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"add-task\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: task.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(task.title), 1 /* TEXT */), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: 'task-' + task.id,\n      \"onUpdate:modelValue\": $event => task.completed = $event,\n      onChange: $event => $options.updateTask(task)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), [[_vModelCheckbox, task.completed]])]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn-delete\",\n      onClick: $event => $options.deleteTask(task.id)\n    }, \"Eliminar\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTaskTitle = $event),\n    placeholder: \"Nueva tarea\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newTaskTitle]]), _createElementVNode(\"button\", {\n    class: \"btn-add\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addTask && $options.addTask(...args))\n  }, \"Agregar Tarea\")])]);\n}","map":{"version":3,"names":["_createElementVNode","class","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","tasks","task","key","id","_toDisplayString","title","type","$event","completed","onChange","$options","updateTask","_hoisted_5","onClick","deleteTask","_hoisted_6","_hoisted_7","_cache","newTaskTitle","placeholder","args","addTask"],"sources":["C:\\Users\\HP\\Documents\\P1\\front\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Lista de Tareas</h1>\r\n    <div class=\"profile-pic\">\r\n        <img src=\"logo.png\" alt=\"\" />\r\n      </div>\r\n    <table class=\"task-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Tarea</th>\r\n          <th>Completada</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"task in tasks\" :key=\"task.id\">\r\n          <td>{{ task.title }}</td>\r\n          <td>\r\n            <input type=\"checkbox\" :id=\"'task-' + task.id\" v-model=\"task.completed\" @change=\"updateTask(task)\" />\r\n           \r\n          </td>\r\n          <td>\r\n            <button class=\"btn-delete\" @click=\"deleteTask(task.id)\">Eliminar</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"add-task\">\r\n      <input v-model=\"newTaskTitle\" placeholder=\"Nueva tarea\" />\r\n      <button class=\"btn-add\" @click=\"addTask\">Agregar Tarea</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { request } from 'graphql-request';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n      newTaskTitle: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchTasks() {\r\n      const query = `\r\n        {\r\n          tasks {\r\n            id\r\n            title\r\n            completed\r\n          }\r\n        }\r\n      `;\r\n\r\n      try {\r\n        const data = await request('http://localhost:4000/graphql', query);\r\n        this.tasks = data.tasks;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async addTask() {\r\n      if (!this.newTaskTitle.trim()) return;\r\n\r\n      const mutation = `\r\n        mutation($title: String!) {\r\n          addTask(title: $title) {\r\n            id\r\n            title\r\n            completed\r\n          }\r\n        }\r\n      `;\r\n\r\n      const variables = { title: this.newTaskTitle.trim() };\r\n\r\n      try {\r\n        const data = await request('http://localhost:4000/graphql', mutation, variables);\r\n        this.tasks.push(data.addTask);\r\n        this.newTaskTitle = '';\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async updateTask(task) {\r\n      const mutation = `\r\n        mutation($id: ID!, $completed: Boolean!) {\r\n          updateTask(id: $id, completed: $completed) {\r\n            id\r\n            title\r\n            completed\r\n          }\r\n        }\r\n      `;\r\n\r\n      const variables = {\r\n        id: task.id,\r\n        completed: task.completed,\r\n      };\r\n\r\n      try {\r\n        await request('http://localhost:4000/graphql', mutation, variables);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async deleteTask(taskId) {\r\n      const mutation = `\r\n        mutation($id: ID!) {\r\n          deleteTask(id: $id)\r\n        }\r\n      `;\r\n\r\n      const variables = {\r\n        id: taskId,\r\n      };\r\n\r\n      try {\r\n        await request('http://localhost:4000/graphql', mutation, variables);\r\n        this.tasks = this.tasks.filter(task => task.id !== taskId);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchTasks();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.task-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.task-table th,\r\n.task-table td {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: left;\r\n}\r\n\r\n.check-label {\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.check-label::after {\r\n  content: \"\";\r\n  display: block;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: #007bff;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.check-label input:checked + .check-label::after {\r\n  opacity: 1;\r\n}\r\n\r\n.btn-delete {\r\n  background-color: #dc3596;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-delete:hover {\r\n  background-color: #f7447f;\r\n}\r\n\r\n.btn-add {\r\n  background-color: #8dcbf0;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-add:hover {\r\n  background-color: #63aef3;\r\n}\r\n\r\n.add-task {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.add-task input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-task button {\r\n  border: none;\r\n}\r\n</style>\r\n"],"mappings":";gCAEIA,mBAAA,CAAwB,YAApB,iBAAe;gCACnBA,mBAAA,CAEQ;EAFHC,KAAK,EAAC;AAAa,I,aACpBD,mBAAA,CAA6B;EAAxBE,GAAG,EAAC,UAAU;EAACC,GAAG,EAAC;;;EAErBF,KAAK,EAAC;AAAY;gCACvBD,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAiB,YAAb,UAAQ,E;mBAXtB;mBAAA;;EA2BSC,KAAK,EAAC;AAAU;;uBA1BvBG,mBAAA,CA8BM,cA7BJC,UAAwB,EACxBC,UAEQ,EACRN,mBAAA,CAoBQ,SApBRO,UAoBQ,GAnBNC,UAMQ,EACRR,mBAAA,CAWQ,iB,kBAVNI,mBAAA,CASKK,SAAA,QAxBbC,WAAA,CAe2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfT,mBAAA,CASK;MATsBU,GAAG,EAAED,IAAI,CAACE;QACnCf,mBAAA,CAAyB,YAAAgB,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBjB,mBAAA,CAGK,a,gBAFHA,mBAAA,CAAqG;MAA9FkB,IAAI,EAAC,UAAU;MAAEH,EAAE,YAAYF,IAAI,CAACE,EAAE;MAlBzD,uBAAAI,MAAA,IAkBoEN,IAAI,CAACO,SAAS,GAAAD,MAAA;MAAGE,QAAM,EAAAF,MAAA,IAAEG,QAAA,CAAAC,UAAU,CAACV,IAAI;6CAlB5GW,UAAA,I,kBAkBoEX,IAAI,CAACO,SAAS,E,KAGxEpB,mBAAA,CAEK,aADHA,mBAAA,CAAyE;MAAjEC,KAAK,EAAC,YAAY;MAAEwB,OAAK,EAAAN,MAAA,IAAEG,QAAA,CAAAI,UAAU,CAACb,IAAI,CAACE,EAAE;OAAG,UAAQ,iBAtB5EY,UAAA,E;sCA2BI3B,mBAAA,CAGM,OAHN4B,UAGM,G,gBAFJ5B,mBAAA,CAA0D;IA5BhE,uBAAA6B,MAAA,QAAAA,MAAA,MAAAV,MAAA,IA4BsBR,KAAA,CAAAmB,YAAY,GAAAX,MAAA;IAAEY,WAAW,EAAC;iDAA1BpB,KAAA,CAAAmB,YAAY,E,GAC5B9B,mBAAA,CAA+D;IAAvDC,KAAK,EAAC,SAAS;IAAEwB,OAAK,EAAAI,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEV,QAAA,CAAAW,OAAA,IAAAX,QAAA,CAAAW,OAAA,IAAAD,IAAA,CAAO;KAAE,eAAa,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}