{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Lista de Tareas\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.users, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: user.id\n    }, _toDisplayString(user.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newUser = $event),\n    placeholder: \"Nueva tarea\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newUser]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.addUser && _ctx.addUser(...args))\n  }, \"Agregar Tarea\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","users","user","key","id","name","_cache","$event","$data","newUser","placeholder","onClick","args","addUser"],"sources":["C:\\Users\\HP\\Documents\\P1\\front\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Lista de Tareas</h1>\r\n      <ul>\r\n        <li v-for=\"user in users\" :key=\"user.id\">{{ user.name }}</li>\r\n      </ul>\r\n      <input v-model=\"newUser\" placeholder=\"Nueva tarea\" />\r\n      <button @click=\"addUser\">Agregar Tarea</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { request } from 'graphql-request';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: [],\r\n      newUser: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async addTask() {\r\n      const query = `\r\n        mutation($name: String!) {\r\n          addUser(name: $name) {\r\n            id\r\n            name\r\n            email\r\n          }\r\n        }\r\n      `;\r\n\r\n      const variables = { title: this.newUser };\r\n\r\n      try {\r\n        const data = await request('http://localhost:4000/graphql', query, variables);\r\n        this.users.push(data.addUser);\r\n        this.newTask = '';\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async fetchTasks() {\r\n      const query = `\r\n        {\r\n          users {\r\n            id\r\n            name\r\n            email\r\n          }\r\n        }\r\n      `;\r\n\r\n      try {\r\n        const data = await request('http://localhost:4000/graphql', query);\r\n        this.users = data.users;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchUsers();\r\n  },\r\n};\r\n</script>"],"mappings":";gCAEMA,mBAAA,CAAwB,YAApB,iBAAe;;uBADrBC,mBAAA,CAOM,cANJC,UAAwB,EACxBF,mBAAA,CAEK,c,kBADHC,mBAAA,CAA6DE,SAAA,QAJrEC,WAAA,CAI2BC,IAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAA6D;MAAlCO,GAAG,EAAED,IAAI,CAACE;wBAAOF,IAAI,CAACG,IAAI;oDAEvDV,mBAAA,CAAqD;IAN3D,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMsBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAArBF,KAAA,CAAAC,OAAO,E,GACvBd,mBAAA,CAA+C;IAAtCgB,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEZ,IAAA,CAAAa,OAAA,IAAAb,IAAA,CAAAa,OAAA,IAAAD,IAAA,CAAO;KAAE,eAAa,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}